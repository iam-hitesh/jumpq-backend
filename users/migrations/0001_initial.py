# Generated by Django 2.2.6 on 2019-11-02 17:37

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
from django.utils.timezone import utc
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('user_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, default='', max_length=30, null=True, verbose_name='Name of User')),
                ('mobile', models.CharField(db_index=True, default=0, max_length=15, unique=True, verbose_name='Mobile Number')),
                ('email', models.EmailField(db_index=True, max_length=254, null=True, unique=True)),
                ('default_lang', models.IntegerField(choices=[(1, 'English'), (2, 'Hindi')], default=1)),
                ('user_type', models.IntegerField(choices=[(1, 'Admin'), (2, 'Merchant'), (3, 'Customer')], default=3)),
                ('is_staff', models.BooleanField(db_index=True, default=False)),
                ('is_active', models.BooleanField(db_index=True, default=False)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('profile_pic', models.ImageField(default='default.jpg', upload_to='users/profile_pics/')),
                ('referral_code', models.CharField(default='', max_length=30, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User profile',
                'verbose_name_plural': 'User Profile',
                'ordering': ('mobile',),
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('country_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('country_name', models.CharField(db_index=True, default='', max_length=255)),
                ('alt_country_name', models.CharField(db_index=True, default='', max_length=255)),
                ('country_code', models.CharField(db_index=True, default='', max_length=255)),
                ('phone_code', models.IntegerField(db_index=True, default=91)),
                ('currency', models.CharField(default='INR', max_length=50)),
                ('currency_sign', models.CharField(default='â‚¹', max_length=50)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Country',
                'verbose_name_plural': 'Countries',
            },
        ),
        migrations.CreateModel(
            name='Tokens',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(db_index=True, max_length=250)),
                ('token_type', models.IntegerField(choices=[(0, 'Email Confirmation'), (1, 'Mobile Confirmation'), (2, 'Forgot Password'), (3, 'Login'), (4, 'Order Confirm')], db_index=True, default=0)),
                ('is_used', models.BooleanField(db_index=True, default=False)),
                ('expire_on', models.DateTimeField(default=datetime.datetime(2019, 11, 2, 18, 7, 41, 684909, tzinfo=utc))),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Token',
                'verbose_name_plural': 'Tokens',
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('state_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('state_name', models.CharField(db_index=True, default='', max_length=255)),
                ('alt_state_name', models.CharField(db_index=True, default='', max_length=255)),
                ('state_code', models.CharField(db_index=True, default='', max_length=255)),
                ('phone_code', models.IntegerField(db_index=True, default=91, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Country')),
            ],
            options={
                'verbose_name': 'State',
                'verbose_name_plural': 'States',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_name', models.CharField(db_index=True, default='', max_length=255)),
                ('alt_city_name', models.CharField(db_index=True, default='', max_length=255)),
                ('city_code', models.CharField(db_index=True, default='', max_length=255)),
                ('phone_code', models.IntegerField(db_index=True, default=91, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.State')),
            ],
            options={
                'verbose_name': 'City',
                'verbose_name_plural': 'Cities',
            },
        ),
        migrations.CreateModel(
            name='Addresses',
            fields=[
                ('address_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('address', models.CharField(default='', max_length=200)),
                ('landmark', models.CharField(default='', max_length=200)),
                ('pincode', models.CharField(default='', max_length=30)),
                ('location', models.CharField(default='', max_length=200)),
                ('google_map_link', models.CharField(blank=True, max_length=200)),
                ('mobile', models.BigIntegerField()),
                ('address_type', models.IntegerField(choices=[(1, 'Home'), (2, 'Office'), (3, 'Others')], default=1)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.City')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Country')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.State')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Addresses',
                'verbose_name_plural': 'Address',
            },
        ),
    ]
